{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TicketService {\n  constructor(_http) {\n    this._http = _http;\n    this.urlBase = \"http://localhost:3000/api/\";\n  }\n  getTickets() {\n    let httpOptions = {\n      headers: new HttpHeaders({}),\n      params: new HttpParams()\n    };\n    return this._http.get(this.urlBase + \"ticket\", httpOptions);\n  }\n  getCategoria() {\n    let httpOptions = {\n      headers: new HttpHeaders({}),\n      params: new HttpParams()\n    };\n    return this._http.get(this.urlBase + \"ticket/categoria\", httpOptions);\n  }\n  deleteTicket(id) {\n    let httpOptions = {\n      headers: new HttpHeaders({}),\n      params: new HttpParams()\n    };\n    return this._http.delete(this.urlBase + \"ticket/\" + id, httpOptions);\n  }\n  editTicket(ticket) {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams()\n    };\n    let body = JSON.stringify(ticket);\n    return this._http.put(this.urlBase + \"ticket/\" + ticket._id, body, httpOptions);\n  }\n  getTicket(id) {\n    let httpOptions = {\n      headers: new HttpHeaders({}),\n      params: new HttpParams()\n    };\n    return this._http.get(this.urlBase + \"ticket/\" + id, httpOptions);\n  }\n  newTicket(ticket) {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams()\n    };\n    let body = JSON.stringify(ticket);\n    return this._http.post(this.urlBase + \"ticket\", body, httpOptions);\n  }\n}\nTicketService.ɵfac = function TicketService_Factory(t) {\n  return new (t || TicketService)(i0.ɵɵinject(i1.HttpClient));\n};\nTicketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TicketService,\n  factory: TicketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;;;AAQ1E,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IADzB,YAAO,GAAU,4BAA4B;EACJ;EAEzCC,UAAU;IACR,IAAIC,WAAW,GAAE;MACfC,OAAO,EAAG,IAAIP,WAAW,CAAE,EAE1B,CAAC;MACJQ,MAAM,EAAG,IAAIP,UAAU;KACtB;IAED,OAAO,IAAI,CAACG,KAAK,CAACK,GAAG,CAAC,IAAI,CAACC,OAAO,GAAG,QAAQ,EAACJ,WAAW,CAAC;EAC5D;EACAK,YAAY;IACV,IAAIL,WAAW,GAAE;MACfC,OAAO,EAAG,IAAIP,WAAW,CAAE,EAE1B,CAAC;MACJQ,MAAM,EAAG,IAAIP,UAAU;KACtB;IAED,OAAO,IAAI,CAACG,KAAK,CAACK,GAAG,CAAC,IAAI,CAACC,OAAO,GAAG,kBAAkB,EAAEJ,WAAW,CAAC;EACvE;EAEAM,YAAY,CAACC,EAAW;IACtB,IAAIP,WAAW,GAAE;MACfC,OAAO,EAAG,IAAIP,WAAW,CAAE,EAE1B,CAAC;MACJQ,MAAM,EAAG,IAAIP,UAAU;KACtB;IAED,OAAO,IAAI,CAACG,KAAK,CAACU,MAAM,CAAC,IAAI,CAACJ,OAAO,GAAG,SAAS,GAAGG,EAAE,EAACP,WAAW,CAAC;EACrE;EAEAS,UAAU,CAACC,MAAa;IACtB,IAAIV,WAAW,GAAE;MACfC,OAAO,EAAG,IAAIP,WAAW,CAAE;QACzB,cAAc,EAAE;OACjB,CAAC;MACJQ,MAAM,EAAG,IAAIP,UAAU;KACtB;IACD,IAAIgB,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC;IACjC,OAAO,IAAI,CAACZ,KAAK,CAACgB,GAAG,CAAC,IAAI,CAACV,OAAO,GAAG,SAAS,GAAGM,MAAM,CAACK,GAAG,EAACJ,IAAI,EAACX,WAAW,CAAC;EAC/E;EAEAgB,SAAS,CAACT,EAAW;IACnB,IAAIP,WAAW,GAAE;MACfC,OAAO,EAAG,IAAIP,WAAW,CAAE,EAE1B,CAAC;MACJQ,MAAM,EAAG,IAAIP,UAAU;KACtB;IAED,OAAO,IAAI,CAACG,KAAK,CAACK,GAAG,CAAC,IAAI,CAACC,OAAO,GAAG,SAAS,GAAGG,EAAE,EAACP,WAAW,CAAC;EAClE;EAEAiB,SAAS,CAACP,MAAa;IACrB,IAAIV,WAAW,GAAE;MACfC,OAAO,EAAG,IAAIP,WAAW,CAAE;QACzB,cAAc,EAAE;OACjB,CAAC;MACJQ,MAAM,EAAG,IAAIP,UAAU;KACtB;IAED,IAAIgB,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC;IAEjC,OAAO,IAAI,CAACZ,KAAK,CAACoB,IAAI,CAAC,IAAI,CAACd,OAAO,GAAG,QAAQ,EAACO,IAAI,EAACX,WAAW,CAAC;EAElE;;AAvEWJ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAuB,SAAbvB,aAAa;EAAAwB,YAFZ;AAAM","names":["HttpHeaders","HttpParams","TicketService","constructor","_http","getTickets","httpOptions","headers","params","get","urlBase","getCategoria","deleteTicket","id","delete","editTicket","ticket","body","JSON","stringify","put","_id","getTicket","newTicket","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\patri\\Documents\\tp5-QuirogaPatricioAlejandro-backend\\frontend\\src\\app\\services\\ticket.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Ticket } from '../models/ticket';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TicketService {\r\n\r\n  urlBase:string = \"http://localhost:3000/api/\"\r\n  constructor(private _http: HttpClient) { }\r\n \r\n  getTickets():Observable<any>{\r\n    let httpOptions ={\r\n      headers : new HttpHeaders ({\r\n\r\n      }),\r\n    params : new HttpParams()\r\n    }\r\n    \r\n    return this._http.get(this.urlBase + \"ticket\",httpOptions);\r\n  }\r\n  getCategoria(){\r\n    let httpOptions ={\r\n      headers : new HttpHeaders ({\r\n\r\n      }),\r\n    params : new HttpParams()\r\n    }\r\n    \r\n    return this._http.get(this.urlBase + \"ticket/categoria\" ,httpOptions);\r\n  }\r\n\r\n  deleteTicket(id : string):Observable<any>{\r\n    let httpOptions ={\r\n      headers : new HttpHeaders ({\r\n\r\n      }),\r\n    params : new HttpParams()\r\n    }\r\n    \r\n    return this._http.delete(this.urlBase + \"ticket/\" + id,httpOptions);\r\n  }\r\n\r\n  editTicket(ticket:Ticket):Observable<any>{\r\n    let httpOptions ={\r\n      headers : new HttpHeaders ({\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n    params : new HttpParams()\r\n    }\r\n    let body = JSON.stringify(ticket);\r\n    return this._http.put(this.urlBase + \"ticket/\" + ticket._id,body,httpOptions);\r\n  }\r\n\r\n  getTicket(id : string):Observable<any>{\r\n    let httpOptions ={\r\n      headers : new HttpHeaders ({\r\n\r\n      }),\r\n    params : new HttpParams()\r\n    }\r\n    \r\n    return this._http.get(this.urlBase + \"ticket/\" + id,httpOptions);\r\n  }\r\n\r\n  newTicket(ticket:Ticket):Observable<any>{\r\n    let httpOptions ={\r\n      headers : new HttpHeaders ({\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n    params : new HttpParams()\r\n    }\r\n\r\n    let body = JSON.stringify(ticket)\r\n    \r\n    return this._http.post(this.urlBase + \"ticket\",body,httpOptions);\r\n    \r\n  }\r\n\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}