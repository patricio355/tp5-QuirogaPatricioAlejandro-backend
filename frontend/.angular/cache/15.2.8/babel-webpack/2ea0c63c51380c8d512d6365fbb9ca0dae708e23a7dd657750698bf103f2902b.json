{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Ticket } from 'src/app/models/ticket';\nlet TicketComponent = class TicketComponent {\n  ngOnInit() {}\n  constructor(servicio, router) {\n    this.servicio = servicio;\n    this.router = router;\n    this.tickets = new Array();\n    this.filtro = new Array();\n    this.obtenerTickets();\n    this.obtenerTicketsPorFiltro();\n  }\n  obtenerTickets() {\n    this.servicio.getTickets().subscribe(result => {\n      result.forEach(element => {\n        let unTicket = new Ticket();\n        Object.assign(unTicket, element);\n        this.tickets.push(unTicket);\n        unTicket = new Ticket();\n      });\n    }, error => {});\n  }\n  obtenerTicketsPorFiltro() {\n    this.servicio.getCategoria().subscribe(result1 => {\n      if (Array.isArray(result1)) {\n        result1.forEach(element => {\n          let unTicket = new Ticket();\n          Object.assign(unTicket, element);\n          this.filtro.push(unTicket);\n          unTicket = new Ticket();\n        });\n      } else {\n        let unTicket = new Ticket();\n        Object.assign(unTicket, result1);\n        this.filtro.push(unTicket);\n        unTicket = new Ticket();\n      }\n    }, error => {});\n  }\n  modificarTicket(id) {\n    this.router.navigate([\"ticket-form\", id]);\n  }\n  agregarTicket() {\n    this.router.navigate([\"ticket-form\", 0]);\n  }\n  eliminarTicket(id) {\n    this.servicio.deleteTicket(id).subscribe(result => {\n      console.log('Ticket eliminado correctamente');\n      this.tickets = new Array();\n      this.obtenerTickets();\n    }, error => {\n      console.error('Error al eliminar el ticket:', error);\n    });\n  }\n};\nTicketComponent = __decorate([Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.css']\n})], TicketComponent);\nexport { TicketComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,MAAM,QAAQ,uBAAuB;AAQvC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAE5BC,QAAQ,IACR;EAICC,YAAoBC,QAAsB,EAAUC,MAAa;IAA7C,aAAQ,GAARD,QAAQ;IAAwB,WAAM,GAANC,MAAM;IACzD,IAAI,CAACC,OAAO,GAAG,IAAIC,KAAK,EAAU;IAClC,IAAI,CAACC,MAAM,GAAG,IAAID,KAAK,EAAU;IACjC,IAAI,CAACE,cAAc,EAAE;IACrB,IAAI,CAACC,uBAAuB,EAAE;EAC/B;EAEDD,cAAc;IACZ,IAAI,CAACL,QAAQ,CAACO,UAAU,EAAE,CAACC,SAAS,CAClCC,MAAM,IAAE;MACNA,MAAM,CAACC,OAAO,CAAEC,OAAW,IAAI;QAC7B,IAAIC,QAAQ,GAAG,IAAIhB,MAAM,EAAE;QAC3BiB,MAAM,CAACC,MAAM,CAACF,QAAQ,EAACD,OAAO,CAAC;QAC/B,IAAI,CAACT,OAAO,CAACa,IAAI,CAACH,QAAQ,CAAC;QAC3BA,QAAQ,GAAG,IAAIhB,MAAM,EAAE;MACzB,CAAC,CAAC;IACJ,CAAC,EACDoB,KAAK,IAAE,CAEP,CAAC,CACF;EACH;EAEAV,uBAAuB;IACrB,IAAI,CAACN,QAAQ,CAACiB,YAAY,EAAE,CAACT,SAAS,CACpCU,OAAO,IAAG;MACR,IAAIf,KAAK,CAACgB,OAAO,CAACD,OAAO,CAAC,EAAE;QAC1BA,OAAO,CAACR,OAAO,CAAEC,OAAY,IAAI;UAC/B,IAAIC,QAAQ,GAAG,IAAIhB,MAAM,EAAE;UAC3BiB,MAAM,CAACC,MAAM,CAACF,QAAQ,EAAED,OAAO,CAAC;UAChC,IAAI,CAACP,MAAM,CAACW,IAAI,CAACH,QAAQ,CAAC;UAC1BA,QAAQ,GAAG,IAAIhB,MAAM,EAAE;QACzB,CAAC,CAAC;OACH,MAAM;QACL,IAAIgB,QAAQ,GAAG,IAAIhB,MAAM,EAAE;QAC3BiB,MAAM,CAACC,MAAM,CAACF,QAAQ,EAAEM,OAAO,CAAC;QAChC,IAAI,CAACd,MAAM,CAACW,IAAI,CAACH,QAAQ,CAAC;QAC1BA,QAAQ,GAAG,IAAIhB,MAAM,EAAE;;IAE3B,CAAC,EACDoB,KAAK,IAAG,CAER,CAAC,CACF;EACH;EAEAI,eAAe,CAACC,EAAS;IACvB,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,aAAa,EAACD,EAAE,CAAC,CAAC;EAC1C;EAEAE,aAAa;IACX,IAAI,CAACtB,MAAM,CAACqB,QAAQ,CAAC,CAAC,aAAa,EAAC,CAAC,CAAC,CAAC;EACzC;EAEAE,cAAc,CAACH,EAAS;IACtB,IAAI,CAACrB,QAAQ,CAACyB,YAAY,CAACJ,EAAE,CAAC,CAACb,SAAS,CACtCC,MAAM,IAAE;MACNiB,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,IAAI,CAACzB,OAAO,GAAG,IAAIC,KAAK,EAAU;MAClC,IAAI,CAACE,cAAc,EAAE;IACvB,CAAC,EACDW,KAAK,IAAE;MACLU,OAAO,CAACV,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACH;CAEC;AA1EYnB,eAAe,eAL3BF,SAAS,CAAC;EACTiC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWjC,eAAe,CA0E3B;SA1EYA,eAAe","names":["Component","Ticket","TicketComponent","ngOnInit","constructor","servicio","router","tickets","Array","filtro","obtenerTickets","obtenerTicketsPorFiltro","getTickets","subscribe","result","forEach","element","unTicket","Object","assign","push","error","getCategoria","result1","isArray","modificarTicket","id","navigate","agregarTicket","eliminarTicket","deleteTicket","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\patri\\Documents\\tp5-QuirogaPatricioAlejandro-backend\\frontend\\src\\app\\components\\ticket\\ticket.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Ticket } from 'src/app/models/ticket';\r\nimport { TicketService } from 'src/app/services/ticket.service';\r\n\r\n@Component({\r\n  selector: 'app-ticket',\r\n  templateUrl: './ticket.component.html',\r\n  styleUrls: ['./ticket.component.css']\r\n})\r\nexport class TicketComponent implements OnInit{\r\n\r\nngOnInit(): void {\r\n}\r\n\r\n  filtro!:Array<Ticket>;\r\n  tickets!:Array<Ticket>;\r\n constructor(private servicio:TicketService ,private router:Router){\r\n  this.tickets = new Array<Ticket>();\r\n  this.filtro = new Array<Ticket>();\r\n  this.obtenerTickets();\r\n  this.obtenerTicketsPorFiltro()\r\n }\r\n\r\nobtenerTickets(){\r\n  this.servicio.getTickets().subscribe(\r\n    result=>{\r\n      result.forEach((element:any) => {\r\n        let unTicket = new Ticket();\r\n        Object.assign(unTicket,element);\r\n        this.tickets.push(unTicket);\r\n        unTicket = new Ticket();\r\n      });\r\n    },\r\n    error=>{\r\n\r\n    }\r\n  )\r\n}\r\n\r\nobtenerTicketsPorFiltro() {\r\n  this.servicio.getCategoria().subscribe(\r\n    result1 => {\r\n      if (Array.isArray(result1)) {\r\n        result1.forEach((element: any) => {\r\n          let unTicket = new Ticket();\r\n          Object.assign(unTicket, element);\r\n          this.filtro.push(unTicket);\r\n          unTicket = new Ticket();\r\n        });\r\n      } else {\r\n        let unTicket = new Ticket();\r\n        Object.assign(unTicket, result1);\r\n        this.filtro.push(unTicket);\r\n        unTicket = new Ticket();\r\n      }\r\n    },\r\n    error => {\r\n    \r\n    }\r\n  );\r\n}\r\n\r\nmodificarTicket(id:string){\r\n  this.router.navigate([\"ticket-form\",id])\r\n}\r\n\r\nagregarTicket(){\r\n  this.router.navigate([\"ticket-form\",0])\r\n}\r\n\r\neliminarTicket(id:string) {\r\n  this.servicio.deleteTicket(id).subscribe(\r\n    result=> {\r\n      console.log('Ticket eliminado correctamente');\r\n      this.tickets = new Array<Ticket>();\r\n      this.obtenerTickets();\r\n    },\r\n    error=> {\r\n      console.error('Error al eliminar el ticket:', error);\r\n    }\r\n  );\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}