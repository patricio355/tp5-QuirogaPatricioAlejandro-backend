{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EspectadorService {\n  constructor(_http) {\n    this._http = _http;\n    this.urlBase = \"http://localhost:3000/api/\";\n  }\n  getEspectadores() {\n    let httpOptions = {\n      headers: new HttpHeaders({}),\n      params: new HttpParams()\n    };\n    return this._http.get(this.urlBase + \"espectador\", httpOptions);\n  }\n}\nEspectadorService.ɵfac = function EspectadorService_Factory(t) {\n  return new (t || EspectadorService)(i0.ɵɵinject(i1.HttpClient));\n};\nEspectadorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EspectadorService,\n  factory: EspectadorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;;;AAO1E,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,KAAkB;IAAlB,UAAK,GAALA,KAAK;IADzB,YAAO,GAAU,4BAA4B;EACH;EAE1CC,eAAe;IACb,IAAIC,WAAW,GAAE;MACfC,OAAO,EAAG,IAAIP,WAAW,CAAE,EAE1B,CAAC;MACJQ,MAAM,EAAG,IAAIP,UAAU;KACtB;IAED,OAAO,IAAI,CAACG,KAAK,CAACK,GAAG,CAAC,IAAI,CAACC,OAAO,GAAG,YAAY,EAACJ,WAAW,CAAC;EAChE;;AAdWJ,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAS,SAAjBT,iBAAiB;EAAAU,YAFhB;AAAM","names":["HttpHeaders","HttpParams","EspectadorService","constructor","_http","getEspectadores","httpOptions","headers","params","get","urlBase","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\patri\\Documents\\tp5-QuirogaPatricioAlejandro-backend\\frontend\\src\\app\\services\\espectador.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EspectadorService {\r\n\r\n  urlBase:string = \"http://localhost:3000/api/\"\r\n  constructor(private _http : HttpClient) { }\r\n\r\n  getEspectadores():Observable<any>{\r\n    let httpOptions ={\r\n      headers : new HttpHeaders ({\r\n\r\n      }),\r\n    params : new HttpParams()\r\n    }\r\n    \r\n    return this._http.get(this.urlBase + \"espectador\",httpOptions);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}