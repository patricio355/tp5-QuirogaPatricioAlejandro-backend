{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/patri/Documents/tp5-QuirogaPatricioAlejandro-backend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Espectador } from 'src/app/models/espectador';\nimport { Ticket } from 'src/app/models/ticket';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ticket.service\";\nimport * as i2 from \"src/app/services/espectador.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction TicketFormComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const e_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", e_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", e_r3.nombre, \" \", e_r3.apellido, \"\");\n  }\n}\nfunction TicketFormComponent_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TicketFormComponent_button_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.guardarTicket());\n    });\n    i0.ɵɵtext(1, \"Guardar\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TicketFormComponent_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TicketFormComponent_button_27_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.modificarTicket(ctx_r6.ticket));\n    });\n    i0.ɵɵtext(1, \"Modificar\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TicketFormComponent {\n  constructor(servicio, espService, activatedRoute, router) {\n    this.servicio = servicio;\n    this.espService = espService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.accion = \"\";\n    this.ticket = new Ticket();\n    this.espectadores = new Array();\n  }\n  ngOnInit() {\n    var _this = this;\n    this.activatedRoute.params.subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (params) {\n        if (params['id'] == \"0\") {\n          _this.accion = \"new\";\n          _this.cargarEspectadores();\n        } else {\n          _this.accion = \"update\";\n          // await this.cargarEspectadores()\n          _this.cargarTicket(params['id']);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  cargarTicket(id) {\n    this.servicio.getTicket(id).subscribe(result => {\n      console.log(result);\n      Object.assign(this.ticket, result);\n      this.ticket.espectador = this.espectadores.find(item => item._id == this.ticket.espectador._id);\n    }, error => {});\n  }\n  guardarTicket() {\n    this.servicio.newTicket(this.ticket).subscribe(result => {\n      if (result.status == 1) alert(result.msg);\n      this.router.navigate([\"ticket\"]);\n    }, error => {\n      alert(error.msg);\n    });\n  }\n  cargarEspectadores() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.espService.getEspectadores().subscribe(result => {\n        result.forEach(element => {\n          let unEspectador = new Espectador();\n          Object.assign(unEspectador, element);\n          _this2.espectadores.push(unEspectador);\n          unEspectador = new Espectador();\n        });\n      }, error => {});\n    })();\n  }\n  modificarTicket(ticket) {\n    this.servicio.editTicket(ticket).subscribe(result => {\n      alert(\"se modifico\");\n      this.router.navigate([\"ticket\"]);\n    });\n  }\n  volver() {\n    this.router.navigate([\"ticket\"]);\n  }\n}\nTicketFormComponent.ɵfac = function TicketFormComponent_Factory(t) {\n  return new (t || TicketFormComponent)(i0.ɵɵdirectiveInject(i1.TicketService), i0.ɵɵdirectiveInject(i2.EspectadorService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nTicketFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TicketFormComponent,\n  selectors: [[\"app-ticket-form\"]],\n  decls: 28,\n  vars: 7,\n  consts: [[\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"container\", \"col-5\"], [1, \"mb-3\"], [\"for\", \"iddni\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"iddni\", \"name\", \"dni\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"idprecio\", 1, \"form-label\"], [\"name\", \"catEsp\", \"id\", \"id\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"l\"], [\"value\", \"e\"], [\"for\", \"idte\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"idprecio\", \"name\", \"tipoEspectador\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"idfc\", 1, \"form-label\"], [\"name\", \"espectador\", \"id\", \"id\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [3, \"ngValue\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function TicketFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function TicketFormComponent_Template_button_click_0_listener() {\n        return ctx.volver();\n      });\n      i0.ɵɵtext(1, \"Volver\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1)(3, \"div\", 2)(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Precio Ticket\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketFormComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.ticket.precioTicket = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Categoria Espectador\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"select\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketFormComponent_Template_select_ngModelChange_10_listener($event) {\n        return ctx.ticket.categoriaEspectador = $event;\n      });\n      i0.ɵɵelementStart(11, \"option\", 7);\n      i0.ɵɵtext(12, \"Local\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 8);\n      i0.ɵɵtext(14, \"Extranjero\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 2)(16, \"label\", 9);\n      i0.ɵɵtext(17, \"Fecha de Compra\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketFormComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.ticket.fechaCompra = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 2)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"Espectador \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketFormComponent_Template_select_ngModelChange_22_listener($event) {\n        return ctx.ticket.espectador = $event;\n      });\n      i0.ɵɵtemplate(23, TicketFormComponent_option_23_Template, 2, 3, \"option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"br\")(25, \"br\");\n      i0.ɵɵtemplate(26, TicketFormComponent_button_26_Template, 2, 0, \"button\", 14);\n      i0.ɵɵtemplate(27, TicketFormComponent_button_27_Template, 2, 0, \"button\", 14);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.precioTicket);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.categoriaEspectador);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.fechaCompra);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.espectador);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.espectadores);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.accion == \"new\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.accion == \"update\");\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Espectador","Ticket","i0","TicketFormComponent","constructor","servicio","espService","activatedRoute","router","ticket","espectadores","Array","ngOnInit","params","subscribe","accion","cargarEspectadores","cargarTicket","id","getTicket","result","console","log","Object","assign","espectador","find","item","_id","error","guardarTicket","newTicket","status","alert","msg","navigate","getEspectadores","forEach","element","unEspectador","push","modificarTicket","editTicket","volver","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\patri\\Documents\\tp5-QuirogaPatricioAlejandro-backend\\frontend\\src\\app\\components\\ticket-form\\ticket-form.component.ts","C:\\Users\\patri\\Documents\\tp5-QuirogaPatricioAlejandro-backend\\frontend\\src\\app\\components\\ticket-form\\ticket-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Espectador } from 'src/app/models/espectador';\r\nimport { Ticket } from 'src/app/models/ticket';\r\nimport { EspectadorService } from 'src/app/services/espectador.service';\r\nimport { TicketService } from 'src/app/services/ticket.service';\r\n\r\n@Component({\r\n  selector: 'app-ticket-form',\r\n  templateUrl: './ticket-form.component.html',\r\n  styleUrls: ['./ticket-form.component.css']\r\n})\r\nexport class TicketFormComponent implements OnInit{\r\n\r\n  ticket!:Ticket;\r\n  accion:string=\"\";\r\n\r\n  espectadores! : Array<Espectador>;\r\n\r\n  constructor (private servicio:TicketService,private espService:EspectadorService, private activatedRoute: ActivatedRoute,private router:Router){\r\n    this.ticket = new Ticket();\r\n    this.espectadores = new Array<Espectador>();\r\n  }\r\n\r\nngOnInit():void{\r\n\r\n  this.activatedRoute.params.subscribe(async params => {\r\n    if(params['id'] == \"0\"){\r\n      this.accion =\"new\";\r\n      this.cargarEspectadores();\r\n    }else {\r\n      this.accion = \"update\";\r\n      // await this.cargarEspectadores()\r\n      this.cargarTicket(params['id']) \r\n    }\r\n  });\r\n}\r\n\r\ncargarTicket(id : string){\r\n  this.servicio.getTicket(id).subscribe(\r\n    result=>{\r\n      console.log(result)\r\n      Object.assign(this.ticket,result);\r\n       this.ticket.espectador = this.espectadores.find(item => (item._id == this.ticket.espectador._id))!;\r\n      \r\n    },\r\n    error=>{\r\n\r\n    }\r\n  )\r\n}\r\n\r\nguardarTicket(){\r\n  this.servicio.newTicket(this.ticket).subscribe(\r\n    (result:any)=>{\r\n      if (result.status == 1)\r\n      alert(result.msg)\r\n      this.router.navigate([\"ticket\"])\r\n    },\r\n    error=>{\r\n      alert(error.msg)\r\n    }\r\n  )\r\n}\r\n\r\nasync cargarEspectadores(){\r\nthis.espService.getEspectadores().subscribe(\r\n  result=>{\r\n    result.forEach((element:any) => {\r\n      let unEspectador = new Espectador();\r\n      Object.assign(unEspectador,element);\r\n      this.espectadores.push(unEspectador);\r\n      unEspectador = new Espectador();\r\n    });\r\n  },\r\n  error=>{\r\n\r\n  }\r\n)\r\n\r\n}\r\n\r\n\r\nmodificarTicket(ticket:Ticket){\r\n  this.servicio.editTicket(ticket).subscribe(\r\n    result =>{\r\n      alert(\"se modifico\")\r\n      this.router.navigate([\"ticket\"])\r\n    }\r\n  )\r\n}\r\n\r\nvolver(){\r\n  this.router.navigate([\"ticket\"])\r\n}\r\n}\r\n","<button  type=\"submit\"  class=\"btn btn-secondary\" (click)=\"volver()\">Volver</button>\r\n\r\n<form class=\"container col-5\">\r\n    <div class=\"mb-3\">\r\n      <label for=\"iddni\" class=\"form-label\">Precio Ticket</label> \r\n      \r\n  \r\n      <input type=\"number\" class=\"form-control\" id=\"iddni\" [(ngModel)]=\"ticket.precioTicket\" name=\"dni\" >\r\n    </div>\r\n   \r\n    <div class=\"mb-3\">\r\n        <label for=\"idprecio\" class=\"form-label\">Categoria Espectador</label>\r\n        <select name=\"catEsp\" id=\"id\" [(ngModel)]=\"ticket.categoriaEspectador\">\r\n            <option value=\"l\">Local</option>\r\n            <option value=\"e\">Extranjero</option>\r\n          </select>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label for=\"idte\" class=\"form-label\">Fecha de Compra</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"idprecio\" [(ngModel)]=\"ticket.fechaCompra\" name=\"tipoEspectador\" >\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label for=\"idfc\" class=\"form-label\">Espectador </label>\r\n       \r\n      </div>\r\n      <select name=\"espectador\" id=\"id\" [(ngModel)]=\"ticket.espectador\">\r\n        <option *ngFor=\" let e of espectadores\" [ngValue]=\"e\">{{e.nombre}} {{e.apellido}}</option>\r\n      </select>\r\n    \r\n   \r\n    <br>\r\n    <br>\r\n\r\n    <button  type=\"submit\" *ngIf=\"accion=='new'\" class=\"btn btn-primary\" (click)=\"guardarTicket()\">Guardar</button>\r\n    \r\n    <button  type=\"submit\" *ngIf=\"accion=='update'\" class=\"btn btn-primary\" (click)=\"modificarTicket(ticket)\">Modificar</button>\r\n \r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}